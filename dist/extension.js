"use strict";var C=Object.create;var f=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var S=(e,o)=>{for(var n in o)f(e,n,{get:o[n],enumerable:!0})},g=(e,o,n,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of k(o))!W.call(e,r)&&r!==n&&f(e,r,{get:()=>o[r],enumerable:!(s=T(o,r))||s.enumerable});return e};var h=(e,o,n)=>(n=e!=null?C(D(e)):{},g(o||!e||!e.__esModule?f(n,"default",{value:e,enumerable:!0}):n,e)),E=e=>g(f({},"__esModule",{value:!0}),e);var P={};S(P,{activate:()=>I,deactivate:()=>N});module.exports=E(P);var d=h(require("vscode"));var t=h(require("vscode")),u=require("child_process");function x(){let e=t.window.activeTextEditor;if(!e||!e.document.fileName.endsWith(".py")){t.window.showWarningMessage("Mother Coding dice: No hay archivo .py activo para diagnosticar.");return}let o=e.document.fileName;(0,u.exec)(`autopep8 --in-place "${o}"`,s=>{if(s){t.window.showErrorMessage("Mother no pudo aplicar autopep8. \xBFEst\xE1 instalado?");return}t.window.showInformationMessage("Formato corregido con autopep8.")}),(0,u.exec)(`pylint "${o}"`,(s,r,p)=>{if(s&&p.includes("No module named")){t.window.showWarningMessage("Mother detect\xF3 que faltan dependencias en tu script.");return}t.window.showInformationMessage("Diagn\xF3stico pylint completado."),t.workspace.openTextDocument({content:r,language:"plaintext"}).then(a=>{t.window.showTextDocument(a,{preview:!1})})});let n=t.window.createTerminal("Mother Coding - Venv");n.sendText("python -m venv mother-env"),n.sendText("mother-env\\Scripts\\activate"),n.show()}var l=h(require("vscode"));function y(){let e=l.window.createTerminal("Mother Coding - Venv");e.show(),e.sendText("python -m venv mother-env");let o=l.env.shell.includes("powershell")?".\\mother-env\\Scripts\\Activate.ps1":"source mother-env/bin/activate";e.sendText(o),l.window.showInformationMessage('\u{1F9EC} Entorno virtual creado y activado: "mother-env".')}var i=h(require("vscode")),m=h(require("fs"));function M(){let e=i.window.activeTextEditor;if(!e)return;let o=e.document.fileName,n=[],s=e.document.getText();if(o.endsWith(".py")){let p=[...s.matchAll(/(?:import|from) (\w+)/g)].map(c=>c[1]),a=i.workspace.workspaceFolders?.[0]?.uri.fsPath+"/requirements.txt",v=m.existsSync(a)?m.readFileSync(a,"utf-8"):"";p.forEach(c=>{v.includes(c)||n.push(c)}),n.length>0?i.window.showWarningMessage(`\u{1F9EA} M\xF3dulos faltantes en requirements.txt: ${n.join(", ")}`):i.window.showInformationMessage("\u2705 Todas las dependencias parecen estar declaradas.")}if(o.endsWith(".js")||o.endsWith(".ts")){let p=[...s.matchAll(/(?:require\(|import .* from )['"](.+)['"]/g)].map(w=>w[1]),a=i.workspace.workspaceFolders?.[0]?.uri.fsPath+"/package.json",v=m.existsSync(a)?JSON.parse(m.readFileSync(a,"utf-8")):{},c={...v.dependencies,...v.devDependencies};p.forEach(w=>{(!c||!c[w])&&n.push(w)}),n.length>0?i.window.showWarningMessage(`\u{1F4E6} Dependencias no encontradas en package.json: ${n.join(", ")}`):i.window.showInformationMessage("\u2705 Todas las dependencias JS/TS est\xE1n declaradas.")}}function I(e){console.log('Congratulations, your extension "mother-coding" is now active!');let o=d.commands.registerCommand("mother-coding.helloWorld",()=>{d.window.showInformationMessage("Hello World from mother-coding!")}),n=d.commands.registerCommand("mother.pythonDoctor",()=>{x()});e.subscriptions.push(o,n),d.commands.registerCommand("mother.venvHealer",y),d.commands.registerCommand("mother.dependencyChecker",M)}function N(){}0&&(module.exports={activate,deactivate});
